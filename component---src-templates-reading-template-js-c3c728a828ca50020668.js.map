{"version":3,"file":"component---src-templates-reading-template-js-c3c728a828ca50020668.js","mappings":"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","sources":["webpack://portfolio-gatsby/./src/components/header.js","webpack://portfolio-gatsby/./src/components/nav.js","webpack://portfolio-gatsby/./src/components/layout.js","webpack://portfolio-gatsby/./src/components/seo.js","webpack://portfolio-gatsby/./src/templates/readingTemplate.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Nav = () => (\n  <nav style={{ width: `100%` }}>\n    <ul style={{ display: `flex`, alignItems: `center` }}>\n      <li style={{ listStyle: `none`, width: `25%` }}>\n        <Link to=\"/\">top</Link>\n      </li>\n      <li style={{ listStyle: `none`, width: `25%` }}>\n        <Link to=\"/reading\">読み物</Link>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default Nav\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Nav from \"./nav\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <Nav />\n        <main>{children}</main>\n        <footer style={{ marginTop: \"1rem\" }}>\n          © {new Date().getFullYear()}, kyoune01\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaTitle =\n    title === \"\"\n      ? site.siteMetadata.title\n      : `${title} | ${site.siteMetadata.title}`\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <>\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={metaTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  )\n}\n\nSEO.defaultProps = {\n  description: ``,\n  title: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Template = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"reading-post-container\">\n        <div className=\"reading-post\">\n          <h1 style={{ marginBottom: \"2rem\" }}>{frontmatter.title}</h1>\n          <div\n            className=\"reading-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nTemplate.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        date: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n}\n\nexport default Template\n\nexport const Head = ({ data }) => (\n  <SEO title={data.markdownRemark.frontmatter.title} />\n)\n\nHead.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        date: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date\n        title\n      }\n    }\n  }\n`\n"],"names":["Header","_ref","siteTitle","React","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","defaultProps","Nav","width","display","alignItems","listStyle","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","SEO","_site$siteMetadata","description","metaTitle","metaDescription","name","content","property","author","markdownRemark","frontmatter","html","Layout","className","dangerouslySetInnerHTML","__html","Head","_ref2"],"sourceRoot":""}