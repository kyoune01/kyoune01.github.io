{"version":3,"file":"component---src-pages-reading-tsx-b14aaf3a480ba00a2e8d.js","mappings":"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","sources":["webpack://portfolio-gatsby/./src/components/readingList.js","webpack://portfolio-gatsby/./src/pages/reading.tsx","webpack://portfolio-gatsby/./src/components/header.js","webpack://portfolio-gatsby/./src/components/nav.js","webpack://portfolio-gatsby/./src/components/layout.js","webpack://portfolio-gatsby/./src/components/seo.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nconst ReadingList = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: {frontmatter: {date: DESC}}, limit: 1000) {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              slug\n              date\n            }\n          }\n        }\n      }\n    }\n  `)\n  if (data.errors) {\n    return\n  }\n\n  return data.allMarkdownRemark.edges.map(({ node }) => {\n    return (\n      <div key={`${node.id}`} style={{ marginTop: \"1rem\" }}>\n        <Link to={`${node.frontmatter.slug}`}>{node.frontmatter.title}</Link>\n      </div>\n    )\n  })\n}\n\nReadingList.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number,\n      edges: PropTypes.node,\n    }),\n  }),\n}\n\nexport default ReadingList\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ReadingList from \"../components/readingList\"\n\nconst NoneCount = {\n  h1: \"動作チェック完了済。原稿推敲中\",\n  description: \"そのうち公開します。\",\n  list: \"\",\n}\n\nconst AllowCount = {\n  h1: \"Today I Learn\",\n  description: \"学習資料などの用途でまとめた資料一覧です。\",\n  list: <ReadingList />,\n}\n\nconst Reading: React.FC<void> = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        totalCount\n      }\n    }\n  `)\n\n  const IsCount = data.allMarkdownRemark.totalCount !== 0\n  const content = IsCount ? AllowCount : NoneCount\n\n  return (\n    <Layout>\n      <h1>{content.h1}</h1>\n      <p>\n        {content.description} <br />\n        <span>リポジトリ : </span>\n        <a\n          href=\"https://github.com/kyoune01/TIL\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          TIL\n        </a>\n      </p>\n      {content.list}\n    </Layout>\n  )\n}\n\nexport default Reading\n\nexport const Head = () => (\n  <SEO title=\"reading\" />\n)\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Nav = () => (\n  <nav style={{ width: `100%` }}>\n    <ul style={{ display: `flex`, alignItems: `center` }}>\n      <li style={{ listStyle: `none`, width: `25%` }}>\n        <Link to=\"/\">top</Link>\n      </li>\n      <li style={{ listStyle: `none`, width: `25%` }}>\n        <Link to=\"/reading\">読み物</Link>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default Nav\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Nav from \"./nav\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <Nav />\n        <main>{children}</main>\n        <footer style={{ marginTop: \"1rem\" }}>\n          © {new Date().getFullYear()}, kyoune01\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaTitle =\n    title === \"\"\n      ? site.siteMetadata.title\n      : `${title} | ${site.siteMetadata.title}`\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <>\n      <title>{metaTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={metaTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={metaTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  )\n}\n\nSEO.defaultProps = {\n  description: ``,\n  title: \"\",\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default SEO\n"],"names":["ReadingList","data","useStaticQuery","errors","allMarkdownRemark","edges","map","_ref","node","React","key","id","style","marginTop","Link","to","frontmatter","slug","title","NoneCount","h1","description","list","AllowCount","Reading","content","totalCount","Layout","href","target","rel","Head","SEO","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Nav","width","display","alignItems","listStyle","children","site","siteMetadata","Date","getFullYear","_site$siteMetadata","metaTitle","metaDescription","name","property","author"],"sourceRoot":""}